Terminaux inutilisés dans la grammaire

   '.'


Grammaire

    0 $accept: program_start $end

    1 primary_expression: '(' expression ')'
    2                   | CONSTANT
    3                   | IDENTIFIER

    4 postfix_expression: primary_expression
    5                   | postfix_expression '(' ')'
    6                   | postfix_expression '(' argument_expression_list ')'
    7                   | postfix_expression PTR_OP IDENTIFIER

    8 argument_expression_list: expression
    9                         | argument_expression_list ',' expression

   10 unary_expression: postfix_expression
   11                 | unary_operator unary_expression
   12                 | SIZEOF '(' type_specifier ')'
   13                 | SIZEOF unary_expression

   14 unary_operator: '&'
   15               | '*'
   16               | '-'

   17 multiplicative_expression: unary_expression
   18                          | multiplicative_expression '*' unary_expression
   19                          | multiplicative_expression '/' unary_expression

   20 additive_expression: multiplicative_expression
   21                    | additive_expression '+' multiplicative_expression
   22                    | additive_expression '-' multiplicative_expression

   23 relational_expression: additive_expression
   24                      | relational_expression '<' additive_expression
   25                      | relational_expression '>' additive_expression
   26                      | relational_expression LE_OP additive_expression
   27                      | relational_expression GE_OP additive_expression

   28 equality_expression: relational_expression
   29                    | equality_expression EQ_OP relational_expression
   30                    | equality_expression NE_OP relational_expression

   31 logical_and_expression: equality_expression
   32                       | logical_and_expression AND_OP equality_expression

   33 logical_or_expression: logical_and_expression
   34                      | logical_or_expression OR_OP logical_and_expression

   35 expression: logical_or_expression
   36           | unary_expression '=' expression

   37 declaration: declaration_specifiers declarator ';'
   38            | struct_specifier ';'

   39 declaration_specifiers: EXTERN type_specifier
   40                       | type_specifier

   41 type_specifier: VOID
   42               | INT
   43               | struct_specifier

   44 struct_specifier: STRUCT IDENTIFIER '{' struct_declaration_list '}'
   45                 | STRUCT '{' struct_declaration_list '}'
   46                 | STRUCT IDENTIFIER

   47 struct_declaration_list: struct_declaration
   48                        | struct_declaration_list struct_declaration

   49 struct_declaration: type_specifier declarator ';'

   50 @1: %empty

   51 declarator: '*' direct_declarator @1

   52 @2: %empty

   53 declarator: direct_declarator @2

   54 direct_declarator: '(' declarator ')'
   55                  | IDENTIFIER
   56                  | direct_declarator '(' parameter_list ')'
   57                  | direct_declarator '(' ')'

   58 parameter_list: parameter_declaration
   59               | parameter_list ',' parameter_declaration

   60 parameter_declaration: declaration_specifiers declarator

   61 statement: compound_statement
   62          | expression_statement
   63          | selection_statement
   64          | iteration_statement
   65          | jump_statement

   66 compound_statement: '{' '}'
   67                   | '{' statement_list '}'
   68                   | '{' declaration_list '}'
   69                   | '{' declaration_list statement_list '}'

   70 declaration_list: declaration
   71                 | declaration_list declaration

   72 statement_list: statement
   73               | statement_list statement

   74 expression_statement: ';'
   75                     | expression ';'

   76 selection_statement: IF '(' expression ')' statement
   77                    | IF '(' expression ')' statement ELSE statement

   78 iteration_statement: WHILE '(' expression ')' statement
   79                    | FOR '(' expression_statement expression_statement expression ')' statement

   80 jump_statement: RETURN ';'
   81               | RETURN expression ';'

   82 program_start: program

   83 program: external_declaration
   84        | program external_declaration

   85 external_declaration: function_definition
   86                     | declaration

   87 function_definition: declaration_specifiers declarator compound_statement


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'&' (38) 14
'(' (40) 1 5 6 12 54 56 57 76 77 78 79
')' (41) 1 5 6 12 54 56 57 76 77 78 79
'*' (42) 15 18 51
'+' (43) 21
',' (44) 9 59
'-' (45) 16 22
'.' (46)
'/' (47) 19
';' (59) 37 38 49 74 75 80 81
'<' (60) 24
'=' (61) 36
'>' (62) 25
'{' (123) 44 45 66 67 68 69
'}' (125) 44 45 66 67 68 69
error (256)
SIZEOF (258) 12 13
PTR_OP (259) 7
LE_OP (260) 26
GE_OP (261) 27
EQ_OP (262) 29
NE_OP (263) 30
AND_OP (264) 32
OR_OP (265) 34
EXTERN (266) 39
INT (267) 42
VOID (268) 41
STRUCT (269) 44 45 46
IF (270) 76 77
ELSE (271) 77
WHILE (272) 78
FOR (273) 79
RETURN (274) 80 81
IDENTIFIER (275) 3 7 44 46 55
CONSTANT (276) 2
"then" (277)


Non-terminaux, suivis des règles où ils apparaissent

$accept (38)
    à gauche: 0
primary_expression (39)
    à gauche: 1 2 3, à droite: 4
postfix_expression (40)
    à gauche: 4 5 6 7, à droite: 5 6 7 10
argument_expression_list (41)
    à gauche: 8 9, à droite: 6 9
unary_expression (42)
    à gauche: 10 11 12 13, à droite: 11 13 17 18 19 36
unary_operator (43)
    à gauche: 14 15 16, à droite: 11
multiplicative_expression (44)
    à gauche: 17 18 19, à droite: 18 19 20 21 22
additive_expression (45)
    à gauche: 20 21 22, à droite: 21 22 23 24 25 26 27
relational_expression (46)
    à gauche: 23 24 25 26 27, à droite: 24 25 26 27 28 29 30
equality_expression (47)
    à gauche: 28 29 30, à droite: 29 30 31 32
logical_and_expression (48)
    à gauche: 31 32, à droite: 32 33 34
logical_or_expression (49)
    à gauche: 33 34, à droite: 34 35
expression (50)
    à gauche: 35 36, à droite: 1 8 9 36 75 76 77 78 79 81
declaration (51)
    à gauche: 37 38, à droite: 70 71 86
declaration_specifiers (52)
    à gauche: 39 40, à droite: 37 60 87
type_specifier (53)
    à gauche: 41 42 43, à droite: 12 39 40 49
struct_specifier (54)
    à gauche: 44 45 46, à droite: 38 43
struct_declaration_list (55)
    à gauche: 47 48, à droite: 44 45 48
struct_declaration (56)
    à gauche: 49, à droite: 47 48
declarator (57)
    à gauche: 51 53, à droite: 37 49 54 60 87
@1 (58)
    à gauche: 50, à droite: 51
@2 (59)
    à gauche: 52, à droite: 53
direct_declarator (60)
    à gauche: 54 55 56 57, à droite: 51 53 56 57
parameter_list (61)
    à gauche: 58 59, à droite: 56 59
parameter_declaration (62)
    à gauche: 60, à droite: 58 59
statement (63)
    à gauche: 61 62 63 64 65, à droite: 72 73 76 77 78 79
compound_statement (64)
    à gauche: 66 67 68 69, à droite: 61 87
declaration_list (65)
    à gauche: 70 71, à droite: 68 69 71
statement_list (66)
    à gauche: 72 73, à droite: 67 69 73
expression_statement (67)
    à gauche: 74 75, à droite: 62 79
selection_statement (68)
    à gauche: 76 77, à droite: 63
iteration_statement (69)
    à gauche: 78 79, à droite: 64
jump_statement (70)
    à gauche: 80 81, à droite: 65
program_start (71)
    à gauche: 82, à droite: 0
program (72)
    à gauche: 83 84, à droite: 82 84
external_declaration (73)
    à gauche: 85 86, à droite: 83 84
function_definition (74)
    à gauche: 87, à droite: 85


État 0

    0 $accept: . program_start $end

    EXTERN  décalage et aller à l'état 1
    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    declaration             aller à l'état 5
    declaration_specifiers  aller à l'état 6
    type_specifier          aller à l'état 7
    struct_specifier        aller à l'état 8
    program_start           aller à l'état 9
    program                 aller à l'état 10
    external_declaration    aller à l'état 11
    function_definition     aller à l'état 12


État 1

   39 declaration_specifiers: EXTERN . type_specifier

    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    type_specifier    aller à l'état 13
    struct_specifier  aller à l'état 14


État 2

   42 type_specifier: INT .

    $défaut  réduction par utilisation de la règle 42 (type_specifier)


État 3

   41 type_specifier: VOID .

    $défaut  réduction par utilisation de la règle 41 (type_specifier)


État 4

   44 struct_specifier: STRUCT . IDENTIFIER '{' struct_declaration_list '}'
   45                 | STRUCT . '{' struct_declaration_list '}'
   46                 | STRUCT . IDENTIFIER

    '{'         décalage et aller à l'état 15
    IDENTIFIER  décalage et aller à l'état 16


État 5

   86 external_declaration: declaration .

    $défaut  réduction par utilisation de la règle 86 (external_declaration)


État 6

   37 declaration: declaration_specifiers . declarator ';'
   87 function_definition: declaration_specifiers . declarator compound_statement

    '('         décalage et aller à l'état 17
    '*'         décalage et aller à l'état 18
    IDENTIFIER  décalage et aller à l'état 19

    declarator         aller à l'état 20
    direct_declarator  aller à l'état 21


État 7

   40 declaration_specifiers: type_specifier .

    $défaut  réduction par utilisation de la règle 40 (declaration_specifiers)


État 8

   38 declaration: struct_specifier . ';'
   43 type_specifier: struct_specifier .

    ';'  décalage et aller à l'état 22

    $défaut  réduction par utilisation de la règle 43 (type_specifier)


État 9

    0 $accept: program_start . $end

    $end  décalage et aller à l'état 23


État 10

   82 program_start: program .
   84 program: program . external_declaration

    EXTERN  décalage et aller à l'état 1
    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    $défaut  réduction par utilisation de la règle 82 (program_start)

    declaration             aller à l'état 5
    declaration_specifiers  aller à l'état 6
    type_specifier          aller à l'état 7
    struct_specifier        aller à l'état 8
    external_declaration    aller à l'état 24
    function_definition     aller à l'état 12


État 11

   83 program: external_declaration .

    $défaut  réduction par utilisation de la règle 83 (program)


État 12

   85 external_declaration: function_definition .

    $défaut  réduction par utilisation de la règle 85 (external_declaration)


État 13

   39 declaration_specifiers: EXTERN type_specifier .

    $défaut  réduction par utilisation de la règle 39 (declaration_specifiers)


État 14

   43 type_specifier: struct_specifier .

    $défaut  réduction par utilisation de la règle 43 (type_specifier)


État 15

   45 struct_specifier: STRUCT '{' . struct_declaration_list '}'

    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    type_specifier           aller à l'état 25
    struct_specifier         aller à l'état 14
    struct_declaration_list  aller à l'état 26
    struct_declaration       aller à l'état 27


État 16

   44 struct_specifier: STRUCT IDENTIFIER . '{' struct_declaration_list '}'
   46                 | STRUCT IDENTIFIER .

    '{'  décalage et aller à l'état 28

    $défaut  réduction par utilisation de la règle 46 (struct_specifier)


État 17

   54 direct_declarator: '(' . declarator ')'

    '('         décalage et aller à l'état 17
    '*'         décalage et aller à l'état 18
    IDENTIFIER  décalage et aller à l'état 19

    declarator         aller à l'état 29
    direct_declarator  aller à l'état 21


État 18

   51 declarator: '*' . direct_declarator @1

    '('         décalage et aller à l'état 17
    IDENTIFIER  décalage et aller à l'état 19

    direct_declarator  aller à l'état 30


État 19

   55 direct_declarator: IDENTIFIER .

    $défaut  réduction par utilisation de la règle 55 (direct_declarator)


État 20

   37 declaration: declaration_specifiers declarator . ';'
   87 function_definition: declaration_specifiers declarator . compound_statement

    '{'  décalage et aller à l'état 31
    ';'  décalage et aller à l'état 32

    compound_statement  aller à l'état 33


État 21

   53 declarator: direct_declarator . @2
   56 direct_declarator: direct_declarator . '(' parameter_list ')'
   57                  | direct_declarator . '(' ')'

    '('  décalage et aller à l'état 34

    $défaut  réduction par utilisation de la règle 52 (@2)

    @2  aller à l'état 35


État 22

   38 declaration: struct_specifier ';' .

    $défaut  réduction par utilisation de la règle 38 (declaration)


État 23

    0 $accept: program_start $end .

    $défaut  accepter


État 24

   84 program: program external_declaration .

    $défaut  réduction par utilisation de la règle 84 (program)


État 25

   49 struct_declaration: type_specifier . declarator ';'

    '('         décalage et aller à l'état 17
    '*'         décalage et aller à l'état 18
    IDENTIFIER  décalage et aller à l'état 19

    declarator         aller à l'état 36
    direct_declarator  aller à l'état 21


État 26

   45 struct_specifier: STRUCT '{' struct_declaration_list . '}'
   48 struct_declaration_list: struct_declaration_list . struct_declaration

    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4
    '}'     décalage et aller à l'état 37

    type_specifier      aller à l'état 25
    struct_specifier    aller à l'état 14
    struct_declaration  aller à l'état 38


État 27

   47 struct_declaration_list: struct_declaration .

    $défaut  réduction par utilisation de la règle 47 (struct_declaration_list)


État 28

   44 struct_specifier: STRUCT IDENTIFIER '{' . struct_declaration_list '}'

    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    type_specifier           aller à l'état 25
    struct_specifier         aller à l'état 14
    struct_declaration_list  aller à l'état 39
    struct_declaration       aller à l'état 27


État 29

   54 direct_declarator: '(' declarator . ')'

    ')'  décalage et aller à l'état 40


État 30

   51 declarator: '*' direct_declarator . @1
   56 direct_declarator: direct_declarator . '(' parameter_list ')'
   57                  | direct_declarator . '(' ')'

    '('  décalage et aller à l'état 34

    $défaut  réduction par utilisation de la règle 50 (@1)

    @1  aller à l'état 41


État 31

   66 compound_statement: '{' . '}'
   67                   | '{' . statement_list '}'
   68                   | '{' . declaration_list '}'
   69                   | '{' . declaration_list statement_list '}'

    SIZEOF      décalage et aller à l'état 42
    EXTERN      décalage et aller à l'état 1
    INT         décalage et aller à l'état 2
    VOID        décalage et aller à l'état 3
    STRUCT      décalage et aller à l'état 4
    IF          décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '{'         décalage et aller à l'état 31
    '}'         décalage et aller à l'état 48
    ';'         décalage et aller à l'état 49
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 65
    declaration                aller à l'état 66
    declaration_specifiers     aller à l'état 67
    type_specifier             aller à l'état 7
    struct_specifier           aller à l'état 8
    statement                  aller à l'état 68
    compound_statement         aller à l'état 69
    declaration_list           aller à l'état 70
    statement_list             aller à l'état 71
    expression_statement       aller à l'état 72
    selection_statement        aller à l'état 73
    iteration_statement        aller à l'état 74
    jump_statement             aller à l'état 75


État 32

   37 declaration: declaration_specifiers declarator ';' .

    $défaut  réduction par utilisation de la règle 37 (declaration)


État 33

   87 function_definition: declaration_specifiers declarator compound_statement .

    $défaut  réduction par utilisation de la règle 87 (function_definition)


État 34

   56 direct_declarator: direct_declarator '(' . parameter_list ')'
   57                  | direct_declarator '(' . ')'

    EXTERN  décalage et aller à l'état 1
    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4
    ')'     décalage et aller à l'état 76

    declaration_specifiers  aller à l'état 77
    type_specifier          aller à l'état 7
    struct_specifier        aller à l'état 14
    parameter_list          aller à l'état 78
    parameter_declaration   aller à l'état 79


État 35

   53 declarator: direct_declarator @2 .

    $défaut  réduction par utilisation de la règle 53 (declarator)


État 36

   49 struct_declaration: type_specifier declarator . ';'

    ';'  décalage et aller à l'état 80


État 37

   45 struct_specifier: STRUCT '{' struct_declaration_list '}' .

    $défaut  réduction par utilisation de la règle 45 (struct_specifier)


État 38

   48 struct_declaration_list: struct_declaration_list struct_declaration .

    $défaut  réduction par utilisation de la règle 48 (struct_declaration_list)


État 39

   44 struct_specifier: STRUCT IDENTIFIER '{' struct_declaration_list . '}'
   48 struct_declaration_list: struct_declaration_list . struct_declaration

    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4
    '}'     décalage et aller à l'état 81

    type_specifier      aller à l'état 25
    struct_specifier    aller à l'état 14
    struct_declaration  aller à l'état 38


État 40

   54 direct_declarator: '(' declarator ')' .

    $défaut  réduction par utilisation de la règle 54 (direct_declarator)


État 41

   51 declarator: '*' direct_declarator @1 .

    $défaut  réduction par utilisation de la règle 51 (declarator)


État 42

   12 unary_expression: SIZEOF . '(' type_specifier ')'
   13                 | SIZEOF . unary_expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 82
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression  aller à l'état 55
    postfix_expression  aller à l'état 56
    unary_expression    aller à l'état 83
    unary_operator      aller à l'état 58


État 43

   76 selection_statement: IF . '(' expression ')' statement
   77                    | IF . '(' expression ')' statement ELSE statement

    '('  décalage et aller à l'état 84


État 44

   78 iteration_statement: WHILE . '(' expression ')' statement

    '('  décalage et aller à l'état 85


État 45

   79 iteration_statement: FOR . '(' expression_statement expression_statement expression ')' statement

    '('  décalage et aller à l'état 86


État 46

   80 jump_statement: RETURN . ';'
   81               | RETURN . expression ';'

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    ';'         décalage et aller à l'état 87
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 88


État 47

    1 primary_expression: '(' . expression ')'

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 89


État 48

   66 compound_statement: '{' '}' .

    $défaut  réduction par utilisation de la règle 66 (compound_statement)


État 49

   74 expression_statement: ';' .

    $défaut  réduction par utilisation de la règle 74 (expression_statement)


État 50

   14 unary_operator: '&' .

    $défaut  réduction par utilisation de la règle 14 (unary_operator)


État 51

   15 unary_operator: '*' .

    $défaut  réduction par utilisation de la règle 15 (unary_operator)


État 52

   16 unary_operator: '-' .

    $défaut  réduction par utilisation de la règle 16 (unary_operator)


État 53

    3 primary_expression: IDENTIFIER .

    $défaut  réduction par utilisation de la règle 3 (primary_expression)


État 54

    2 primary_expression: CONSTANT .

    $défaut  réduction par utilisation de la règle 2 (primary_expression)


État 55

    4 postfix_expression: primary_expression .

    $défaut  réduction par utilisation de la règle 4 (postfix_expression)


État 56

    5 postfix_expression: postfix_expression . '(' ')'
    6                   | postfix_expression . '(' argument_expression_list ')'
    7                   | postfix_expression . PTR_OP IDENTIFIER
   10 unary_expression: postfix_expression .

    PTR_OP  décalage et aller à l'état 90
    '('     décalage et aller à l'état 91

    $défaut  réduction par utilisation de la règle 10 (unary_expression)


État 57

   17 multiplicative_expression: unary_expression .
   36 expression: unary_expression . '=' expression

    '='  décalage et aller à l'état 92

    $défaut  réduction par utilisation de la règle 17 (multiplicative_expression)


État 58

   11 unary_expression: unary_operator . unary_expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression  aller à l'état 55
    postfix_expression  aller à l'état 56
    unary_expression    aller à l'état 93
    unary_operator      aller à l'état 58


État 59

   18 multiplicative_expression: multiplicative_expression . '*' unary_expression
   19                          | multiplicative_expression . '/' unary_expression
   20 additive_expression: multiplicative_expression .

    '*'  décalage et aller à l'état 94
    '/'  décalage et aller à l'état 95

    $défaut  réduction par utilisation de la règle 20 (additive_expression)


État 60

   21 additive_expression: additive_expression . '+' multiplicative_expression
   22                    | additive_expression . '-' multiplicative_expression
   23 relational_expression: additive_expression .

    '-'  décalage et aller à l'état 96
    '+'  décalage et aller à l'état 97

    $défaut  réduction par utilisation de la règle 23 (relational_expression)


État 61

   24 relational_expression: relational_expression . '<' additive_expression
   25                      | relational_expression . '>' additive_expression
   26                      | relational_expression . LE_OP additive_expression
   27                      | relational_expression . GE_OP additive_expression
   28 equality_expression: relational_expression .

    LE_OP  décalage et aller à l'état 98
    GE_OP  décalage et aller à l'état 99
    '>'    décalage et aller à l'état 100
    '<'    décalage et aller à l'état 101

    $défaut  réduction par utilisation de la règle 28 (equality_expression)


État 62

   29 equality_expression: equality_expression . EQ_OP relational_expression
   30                    | equality_expression . NE_OP relational_expression
   31 logical_and_expression: equality_expression .

    EQ_OP  décalage et aller à l'état 102
    NE_OP  décalage et aller à l'état 103

    $défaut  réduction par utilisation de la règle 31 (logical_and_expression)


État 63

   32 logical_and_expression: logical_and_expression . AND_OP equality_expression
   33 logical_or_expression: logical_and_expression .

    AND_OP  décalage et aller à l'état 104

    $défaut  réduction par utilisation de la règle 33 (logical_or_expression)


État 64

   34 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   35 expression: logical_or_expression .

    OR_OP  décalage et aller à l'état 105

    $défaut  réduction par utilisation de la règle 35 (expression)


État 65

   75 expression_statement: expression . ';'

    ';'  décalage et aller à l'état 106


État 66

   70 declaration_list: declaration .

    $défaut  réduction par utilisation de la règle 70 (declaration_list)


État 67

   37 declaration: declaration_specifiers . declarator ';'

    '('         décalage et aller à l'état 17
    '*'         décalage et aller à l'état 18
    IDENTIFIER  décalage et aller à l'état 19

    declarator         aller à l'état 107
    direct_declarator  aller à l'état 21


État 68

   72 statement_list: statement .

    $défaut  réduction par utilisation de la règle 72 (statement_list)


État 69

   61 statement: compound_statement .

    $défaut  réduction par utilisation de la règle 61 (statement)


État 70

   68 compound_statement: '{' declaration_list . '}'
   69                   | '{' declaration_list . statement_list '}'
   71 declaration_list: declaration_list . declaration

    SIZEOF      décalage et aller à l'état 42
    EXTERN      décalage et aller à l'état 1
    INT         décalage et aller à l'état 2
    VOID        décalage et aller à l'état 3
    STRUCT      décalage et aller à l'état 4
    IF          décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '{'         décalage et aller à l'état 31
    '}'         décalage et aller à l'état 108
    ';'         décalage et aller à l'état 49
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 65
    declaration                aller à l'état 109
    declaration_specifiers     aller à l'état 67
    type_specifier             aller à l'état 7
    struct_specifier           aller à l'état 8
    statement                  aller à l'état 68
    compound_statement         aller à l'état 69
    statement_list             aller à l'état 110
    expression_statement       aller à l'état 72
    selection_statement        aller à l'état 73
    iteration_statement        aller à l'état 74
    jump_statement             aller à l'état 75


État 71

   67 compound_statement: '{' statement_list . '}'
   73 statement_list: statement_list . statement

    SIZEOF      décalage et aller à l'état 42
    IF          décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '{'         décalage et aller à l'état 31
    '}'         décalage et aller à l'état 111
    ';'         décalage et aller à l'état 49
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 65
    statement                  aller à l'état 112
    compound_statement         aller à l'état 69
    expression_statement       aller à l'état 72
    selection_statement        aller à l'état 73
    iteration_statement        aller à l'état 74
    jump_statement             aller à l'état 75


État 72

   62 statement: expression_statement .

    $défaut  réduction par utilisation de la règle 62 (statement)


État 73

   63 statement: selection_statement .

    $défaut  réduction par utilisation de la règle 63 (statement)


État 74

   64 statement: iteration_statement .

    $défaut  réduction par utilisation de la règle 64 (statement)


État 75

   65 statement: jump_statement .

    $défaut  réduction par utilisation de la règle 65 (statement)


État 76

   57 direct_declarator: direct_declarator '(' ')' .

    $défaut  réduction par utilisation de la règle 57 (direct_declarator)


État 77

   60 parameter_declaration: declaration_specifiers . declarator

    '('         décalage et aller à l'état 17
    '*'         décalage et aller à l'état 18
    IDENTIFIER  décalage et aller à l'état 19

    declarator         aller à l'état 113
    direct_declarator  aller à l'état 21


État 78

   56 direct_declarator: direct_declarator '(' parameter_list . ')'
   59 parameter_list: parameter_list . ',' parameter_declaration

    ')'  décalage et aller à l'état 114
    ','  décalage et aller à l'état 115


État 79

   58 parameter_list: parameter_declaration .

    $défaut  réduction par utilisation de la règle 58 (parameter_list)


État 80

   49 struct_declaration: type_specifier declarator ';' .

    $défaut  réduction par utilisation de la règle 49 (struct_declaration)


État 81

   44 struct_specifier: STRUCT IDENTIFIER '{' struct_declaration_list '}' .

    $défaut  réduction par utilisation de la règle 44 (struct_specifier)


État 82

    1 primary_expression: '(' . expression ')'
   12 unary_expression: SIZEOF '(' . type_specifier ')'

    SIZEOF      décalage et aller à l'état 42
    INT         décalage et aller à l'état 2
    VOID        décalage et aller à l'état 3
    STRUCT      décalage et aller à l'état 4
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 89
    type_specifier             aller à l'état 116
    struct_specifier           aller à l'état 14


État 83

   13 unary_expression: SIZEOF unary_expression .

    $défaut  réduction par utilisation de la règle 13 (unary_expression)


État 84

   76 selection_statement: IF '(' . expression ')' statement
   77                    | IF '(' . expression ')' statement ELSE statement

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 117


État 85

   78 iteration_statement: WHILE '(' . expression ')' statement

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 118


État 86

   79 iteration_statement: FOR '(' . expression_statement expression_statement expression ')' statement

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    ';'         décalage et aller à l'état 49
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 65
    expression_statement       aller à l'état 119


État 87

   80 jump_statement: RETURN ';' .

    $défaut  réduction par utilisation de la règle 80 (jump_statement)


État 88

   81 jump_statement: RETURN expression . ';'

    ';'  décalage et aller à l'état 120


État 89

    1 primary_expression: '(' expression . ')'

    ')'  décalage et aller à l'état 121


État 90

    7 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  décalage et aller à l'état 122


État 91

    5 postfix_expression: postfix_expression '(' . ')'
    6                   | postfix_expression '(' . argument_expression_list ')'

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    ')'         décalage et aller à l'état 123
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    argument_expression_list   aller à l'état 124
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 125


État 92

   36 expression: unary_expression '=' . expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 126


État 93

   11 unary_expression: unary_operator unary_expression .

    $défaut  réduction par utilisation de la règle 11 (unary_expression)


État 94

   18 multiplicative_expression: multiplicative_expression '*' . unary_expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression  aller à l'état 55
    postfix_expression  aller à l'état 56
    unary_expression    aller à l'état 127
    unary_operator      aller à l'état 58


État 95

   19 multiplicative_expression: multiplicative_expression '/' . unary_expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression  aller à l'état 55
    postfix_expression  aller à l'état 56
    unary_expression    aller à l'état 128
    unary_operator      aller à l'état 58


État 96

   22 additive_expression: additive_expression '-' . multiplicative_expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 130


État 97

   21 additive_expression: additive_expression '+' . multiplicative_expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 131


État 98

   26 relational_expression: relational_expression LE_OP . additive_expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 132


État 99

   27 relational_expression: relational_expression GE_OP . additive_expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 133


État 100

   25 relational_expression: relational_expression '>' . additive_expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 134


État 101

   24 relational_expression: relational_expression '<' . additive_expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 135


État 102

   29 equality_expression: equality_expression EQ_OP . relational_expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 136


État 103

   30 equality_expression: equality_expression NE_OP . relational_expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 137


État 104

   32 logical_and_expression: logical_and_expression AND_OP . equality_expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 138


État 105

   34 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 139


État 106

   75 expression_statement: expression ';' .

    $défaut  réduction par utilisation de la règle 75 (expression_statement)


État 107

   37 declaration: declaration_specifiers declarator . ';'

    ';'  décalage et aller à l'état 32


État 108

   68 compound_statement: '{' declaration_list '}' .

    $défaut  réduction par utilisation de la règle 68 (compound_statement)


État 109

   71 declaration_list: declaration_list declaration .

    $défaut  réduction par utilisation de la règle 71 (declaration_list)


État 110

   69 compound_statement: '{' declaration_list statement_list . '}'
   73 statement_list: statement_list . statement

    SIZEOF      décalage et aller à l'état 42
    IF          décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '{'         décalage et aller à l'état 31
    '}'         décalage et aller à l'état 140
    ';'         décalage et aller à l'état 49
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 65
    statement                  aller à l'état 112
    compound_statement         aller à l'état 69
    expression_statement       aller à l'état 72
    selection_statement        aller à l'état 73
    iteration_statement        aller à l'état 74
    jump_statement             aller à l'état 75


État 111

   67 compound_statement: '{' statement_list '}' .

    $défaut  réduction par utilisation de la règle 67 (compound_statement)


État 112

   73 statement_list: statement_list statement .

    $défaut  réduction par utilisation de la règle 73 (statement_list)


État 113

   60 parameter_declaration: declaration_specifiers declarator .

    $défaut  réduction par utilisation de la règle 60 (parameter_declaration)


État 114

   56 direct_declarator: direct_declarator '(' parameter_list ')' .

    $défaut  réduction par utilisation de la règle 56 (direct_declarator)


État 115

   59 parameter_list: parameter_list ',' . parameter_declaration

    EXTERN  décalage et aller à l'état 1
    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    declaration_specifiers  aller à l'état 77
    type_specifier          aller à l'état 7
    struct_specifier        aller à l'état 14
    parameter_declaration   aller à l'état 141


État 116

   12 unary_expression: SIZEOF '(' type_specifier . ')'

    ')'  décalage et aller à l'état 142


État 117

   76 selection_statement: IF '(' expression . ')' statement
   77                    | IF '(' expression . ')' statement ELSE statement

    ')'  décalage et aller à l'état 143


État 118

   78 iteration_statement: WHILE '(' expression . ')' statement

    ')'  décalage et aller à l'état 144


État 119

   79 iteration_statement: FOR '(' expression_statement . expression_statement expression ')' statement

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    ';'         décalage et aller à l'état 49
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 65
    expression_statement       aller à l'état 145


État 120

   81 jump_statement: RETURN expression ';' .

    $défaut  réduction par utilisation de la règle 81 (jump_statement)


État 121

    1 primary_expression: '(' expression ')' .

    $défaut  réduction par utilisation de la règle 1 (primary_expression)


État 122

    7 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $défaut  réduction par utilisation de la règle 7 (postfix_expression)


État 123

    5 postfix_expression: postfix_expression '(' ')' .

    $défaut  réduction par utilisation de la règle 5 (postfix_expression)


État 124

    6 postfix_expression: postfix_expression '(' argument_expression_list . ')'
    9 argument_expression_list: argument_expression_list . ',' expression

    ')'  décalage et aller à l'état 146
    ','  décalage et aller à l'état 147


État 125

    8 argument_expression_list: expression .

    $défaut  réduction par utilisation de la règle 8 (argument_expression_list)


État 126

   36 expression: unary_expression '=' expression .

    $défaut  réduction par utilisation de la règle 36 (expression)


État 127

   18 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $défaut  réduction par utilisation de la règle 18 (multiplicative_expression)


État 128

   19 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $défaut  réduction par utilisation de la règle 19 (multiplicative_expression)


État 129

   17 multiplicative_expression: unary_expression .

    $défaut  réduction par utilisation de la règle 17 (multiplicative_expression)


État 130

   18 multiplicative_expression: multiplicative_expression . '*' unary_expression
   19                          | multiplicative_expression . '/' unary_expression
   22 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  décalage et aller à l'état 94
    '/'  décalage et aller à l'état 95

    $défaut  réduction par utilisation de la règle 22 (additive_expression)


État 131

   18 multiplicative_expression: multiplicative_expression . '*' unary_expression
   19                          | multiplicative_expression . '/' unary_expression
   21 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  décalage et aller à l'état 94
    '/'  décalage et aller à l'état 95

    $défaut  réduction par utilisation de la règle 21 (additive_expression)


État 132

   21 additive_expression: additive_expression . '+' multiplicative_expression
   22                    | additive_expression . '-' multiplicative_expression
   26 relational_expression: relational_expression LE_OP additive_expression .

    '-'  décalage et aller à l'état 96
    '+'  décalage et aller à l'état 97

    $défaut  réduction par utilisation de la règle 26 (relational_expression)


État 133

   21 additive_expression: additive_expression . '+' multiplicative_expression
   22                    | additive_expression . '-' multiplicative_expression
   27 relational_expression: relational_expression GE_OP additive_expression .

    '-'  décalage et aller à l'état 96
    '+'  décalage et aller à l'état 97

    $défaut  réduction par utilisation de la règle 27 (relational_expression)


État 134

   21 additive_expression: additive_expression . '+' multiplicative_expression
   22                    | additive_expression . '-' multiplicative_expression
   25 relational_expression: relational_expression '>' additive_expression .

    '-'  décalage et aller à l'état 96
    '+'  décalage et aller à l'état 97

    $défaut  réduction par utilisation de la règle 25 (relational_expression)


État 135

   21 additive_expression: additive_expression . '+' multiplicative_expression
   22                    | additive_expression . '-' multiplicative_expression
   24 relational_expression: relational_expression '<' additive_expression .

    '-'  décalage et aller à l'état 96
    '+'  décalage et aller à l'état 97

    $défaut  réduction par utilisation de la règle 24 (relational_expression)


État 136

   24 relational_expression: relational_expression . '<' additive_expression
   25                      | relational_expression . '>' additive_expression
   26                      | relational_expression . LE_OP additive_expression
   27                      | relational_expression . GE_OP additive_expression
   29 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  décalage et aller à l'état 98
    GE_OP  décalage et aller à l'état 99
    '>'    décalage et aller à l'état 100
    '<'    décalage et aller à l'état 101

    $défaut  réduction par utilisation de la règle 29 (equality_expression)


État 137

   24 relational_expression: relational_expression . '<' additive_expression
   25                      | relational_expression . '>' additive_expression
   26                      | relational_expression . LE_OP additive_expression
   27                      | relational_expression . GE_OP additive_expression
   30 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  décalage et aller à l'état 98
    GE_OP  décalage et aller à l'état 99
    '>'    décalage et aller à l'état 100
    '<'    décalage et aller à l'état 101

    $défaut  réduction par utilisation de la règle 30 (equality_expression)


État 138

   29 equality_expression: equality_expression . EQ_OP relational_expression
   30                    | equality_expression . NE_OP relational_expression
   32 logical_and_expression: logical_and_expression AND_OP equality_expression .

    EQ_OP  décalage et aller à l'état 102
    NE_OP  décalage et aller à l'état 103

    $défaut  réduction par utilisation de la règle 32 (logical_and_expression)


État 139

   32 logical_and_expression: logical_and_expression . AND_OP equality_expression
   34 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  décalage et aller à l'état 104

    $défaut  réduction par utilisation de la règle 34 (logical_or_expression)


État 140

   69 compound_statement: '{' declaration_list statement_list '}' .

    $défaut  réduction par utilisation de la règle 69 (compound_statement)


État 141

   59 parameter_list: parameter_list ',' parameter_declaration .

    $défaut  réduction par utilisation de la règle 59 (parameter_list)


État 142

   12 unary_expression: SIZEOF '(' type_specifier ')' .

    $défaut  réduction par utilisation de la règle 12 (unary_expression)


État 143

   76 selection_statement: IF '(' expression ')' . statement
   77                    | IF '(' expression ')' . statement ELSE statement

    SIZEOF      décalage et aller à l'état 42
    IF          décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '{'         décalage et aller à l'état 31
    ';'         décalage et aller à l'état 49
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 65
    statement                  aller à l'état 148
    compound_statement         aller à l'état 69
    expression_statement       aller à l'état 72
    selection_statement        aller à l'état 73
    iteration_statement        aller à l'état 74
    jump_statement             aller à l'état 75


État 144

   78 iteration_statement: WHILE '(' expression ')' . statement

    SIZEOF      décalage et aller à l'état 42
    IF          décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '{'         décalage et aller à l'état 31
    ';'         décalage et aller à l'état 49
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 65
    statement                  aller à l'état 149
    compound_statement         aller à l'état 69
    expression_statement       aller à l'état 72
    selection_statement        aller à l'état 73
    iteration_statement        aller à l'état 74
    jump_statement             aller à l'état 75


État 145

   79 iteration_statement: FOR '(' expression_statement expression_statement . expression ')' statement

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 150


État 146

    6 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $défaut  réduction par utilisation de la règle 6 (postfix_expression)


État 147

    9 argument_expression_list: argument_expression_list ',' . expression

    SIZEOF      décalage et aller à l'état 42
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 151


État 148

   76 selection_statement: IF '(' expression ')' statement .
   77                    | IF '(' expression ')' statement . ELSE statement

    ELSE  décalage et aller à l'état 152

    $défaut  réduction par utilisation de la règle 76 (selection_statement)


État 149

   78 iteration_statement: WHILE '(' expression ')' statement .

    $défaut  réduction par utilisation de la règle 78 (iteration_statement)


État 150

   79 iteration_statement: FOR '(' expression_statement expression_statement expression . ')' statement

    ')'  décalage et aller à l'état 153


État 151

    9 argument_expression_list: argument_expression_list ',' expression .

    $défaut  réduction par utilisation de la règle 9 (argument_expression_list)


État 152

   77 selection_statement: IF '(' expression ')' statement ELSE . statement

    SIZEOF      décalage et aller à l'état 42
    IF          décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '{'         décalage et aller à l'état 31
    ';'         décalage et aller à l'état 49
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 65
    statement                  aller à l'état 154
    compound_statement         aller à l'état 69
    expression_statement       aller à l'état 72
    selection_statement        aller à l'état 73
    iteration_statement        aller à l'état 74
    jump_statement             aller à l'état 75


État 153

   79 iteration_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    SIZEOF      décalage et aller à l'état 42
    IF          décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '{'         décalage et aller à l'état 31
    ';'         décalage et aller à l'état 49
    '&'         décalage et aller à l'état 50
    '*'         décalage et aller à l'état 51
    '-'         décalage et aller à l'état 52
    IDENTIFIER  décalage et aller à l'état 53
    CONSTANT    décalage et aller à l'état 54

    primary_expression         aller à l'état 55
    postfix_expression         aller à l'état 56
    unary_expression           aller à l'état 57
    unary_operator             aller à l'état 58
    multiplicative_expression  aller à l'état 59
    additive_expression        aller à l'état 60
    relational_expression      aller à l'état 61
    equality_expression        aller à l'état 62
    logical_and_expression     aller à l'état 63
    logical_or_expression      aller à l'état 64
    expression                 aller à l'état 65
    statement                  aller à l'état 155
    compound_statement         aller à l'état 69
    expression_statement       aller à l'état 72
    selection_statement        aller à l'état 73
    iteration_statement        aller à l'état 74
    jump_statement             aller à l'état 75


État 154

   77 selection_statement: IF '(' expression ')' statement ELSE statement .

    $défaut  réduction par utilisation de la règle 77 (selection_statement)


État 155

   79 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $défaut  réduction par utilisation de la règle 79 (iteration_statement)
