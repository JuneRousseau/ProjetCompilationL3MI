Terminaux inutilisés dans la grammaire

   '.'


Grammaire

    0 $accept: program_start $end

    1 primary_expression: '(' expression ')'
    2                   | CONSTANT
    3                   | IDENTIFIER

    4 postfix_expression: primary_expression
    5                   | postfix_expression '(' ')'
    6                   | postfix_expression '(' argument_expression_list ')'
    7                   | postfix_expression PTR_OP IDENTIFIER

    8 argument_expression_list: expression
    9                         | argument_expression_list ',' expression

   10 unary_expression: postfix_expression
   11                 | unary_operator unary_expression
   12                 | SIZEOF '(' type_specifier ')'
   13                 | SIZEOF unary_expression

   14 unary_operator: '&'
   15               | '*'
   16               | '-'

   17 multiplicative_expression: unary_expression
   18                          | multiplicative_expression '*' unary_expression
   19                          | multiplicative_expression '/' unary_expression

   20 additive_expression: multiplicative_expression
   21                    | additive_expression '+' multiplicative_expression
   22                    | additive_expression '-' multiplicative_expression

   23 relational_expression: additive_expression
   24                      | relational_expression '<' additive_expression
   25                      | relational_expression '>' additive_expression
   26                      | relational_expression LE_OP additive_expression
   27                      | relational_expression GE_OP additive_expression

   28 equality_expression: relational_expression
   29                    | equality_expression EQ_OP relational_expression
   30                    | equality_expression NE_OP relational_expression

   31 logical_and_expression: equality_expression
   32                       | logical_and_expression AND_OP equality_expression

   33 logical_or_expression: logical_and_expression
   34                      | logical_or_expression OR_OP logical_and_expression

   35 expression: logical_or_expression
   36           | unary_expression '=' expression

   37 declaration: declaration_specifiers declarator ';'
   38            | struct_specifier ';'

   39 declaration_specifiers: EXTERN type_specifier
   40                       | type_specifier

   41 type_specifier: VOID
   42               | INT
   43               | struct_specifier

   44 @1: %empty

   45 struct_specifier: STRUCT IDENTIFIER '{' @1 struct_declaration_list '}'

   46 $@2: %empty

   47 struct_specifier: STRUCT '{' $@2 struct_declaration_list '}'
   48                 | STRUCT IDENTIFIER

   49 struct_declaration_list: struct_declaration
   50                        | struct_declaration_list struct_declaration

   51 struct_declaration: type_specifier declarator ';'

   52 @3: %empty

   53 declarator: '*' @3 direct_declarator

   54 @4: %empty

   55 declarator: @4 direct_declarator

   56 @5: %empty

   57 direct_declarator: '(' @5 declarator ')'
   58                  | IDENTIFIER

   59 $@6: %empty

   60 direct_declarator: direct_declarator '(' $@6 parameter_list ')'

   61 $@7: %empty

   62 direct_declarator: direct_declarator '(' $@7 ')'

   63 parameter_list: parameter_declaration
   64               | parameter_list ',' parameter_declaration

   65 parameter_declaration: declaration_specifiers declarator

   66 statement: compound_statement
   67          | expression_statement
   68          | selection_statement
   69          | iteration_statement
   70          | jump_statement

   71 entree: '{'

   72 sortie: '}'

   73 compound_statement: '{' '}'
   74                   | entree statement_list sortie
   75                   | entree declaration_list sortie
   76                   | entree declaration_list statement_list sortie

   77 declaration_list: declaration
   78                 | declaration_list declaration

   79 statement_list: statement
   80               | statement_list statement

   81 expression_statement: ';'
   82                     | expression ';'

   83 selection_statement: IF '(' expression ')' statement
   84                    | IF '(' expression ')' statement ELSE statement

   85 iteration_statement: WHILE '(' expression ')' statement
   86                    | FOR '(' expression_statement expression_statement expression ')' statement

   87 jump_statement: RETURN ';'
   88               | RETURN expression ';'

   89 program_start: program

   90 program: external_declaration
   91        | program external_declaration

   92 external_declaration: function_definition
   93                     | declaration

   94 $@8: %empty

   95 function_definition: declaration_specifiers declarator $@8 compound_statement


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'&' (38) 14
'(' (40) 1 5 6 12 57 60 62 83 84 85 86
')' (41) 1 5 6 12 57 60 62 83 84 85 86
'*' (42) 15 18 53
'+' (43) 21
',' (44) 9 64
'-' (45) 16 22
'.' (46)
'/' (47) 19
';' (59) 37 38 51 81 82 87 88
'<' (60) 24
'=' (61) 36
'>' (62) 25
'{' (123) 45 47 71 73
'}' (125) 45 47 72 73
error (256)
SIZEOF (258) 12 13
PTR_OP (259) 7
LE_OP (260) 26
GE_OP (261) 27
EQ_OP (262) 29
NE_OP (263) 30
AND_OP (264) 32
OR_OP (265) 34
EXTERN (266) 39
INT (267) 42
VOID (268) 41
STRUCT (269) 45 47 48
IF (270) 83 84
ELSE (271) 84
WHILE (272) 85
FOR (273) 86
RETURN (274) 87 88
IDENTIFIER (275) 3 7 45 48 58
CONSTANT (276) 2
"then" (277)


Non-terminaux, suivis des règles où ils apparaissent

$accept (38)
    à gauche: 0
primary_expression (39)
    à gauche: 1 2 3, à droite: 4
postfix_expression (40)
    à gauche: 4 5 6 7, à droite: 5 6 7 10
argument_expression_list (41)
    à gauche: 8 9, à droite: 6 9
unary_expression (42)
    à gauche: 10 11 12 13, à droite: 11 13 17 18 19 36
unary_operator (43)
    à gauche: 14 15 16, à droite: 11
multiplicative_expression (44)
    à gauche: 17 18 19, à droite: 18 19 20 21 22
additive_expression (45)
    à gauche: 20 21 22, à droite: 21 22 23 24 25 26 27
relational_expression (46)
    à gauche: 23 24 25 26 27, à droite: 24 25 26 27 28 29 30
equality_expression (47)
    à gauche: 28 29 30, à droite: 29 30 31 32
logical_and_expression (48)
    à gauche: 31 32, à droite: 32 33 34
logical_or_expression (49)
    à gauche: 33 34, à droite: 34 35
expression (50)
    à gauche: 35 36, à droite: 1 8 9 36 82 83 84 85 86 88
declaration (51)
    à gauche: 37 38, à droite: 77 78 93
declaration_specifiers (52)
    à gauche: 39 40, à droite: 37 65 95
type_specifier (53)
    à gauche: 41 42 43, à droite: 12 39 40 51
struct_specifier (54)
    à gauche: 45 47 48, à droite: 38 43
@1 (55)
    à gauche: 44, à droite: 45
$@2 (56)
    à gauche: 46, à droite: 47
struct_declaration_list (57)
    à gauche: 49 50, à droite: 45 47 50
struct_declaration (58)
    à gauche: 51, à droite: 49 50
declarator (59)
    à gauche: 53 55, à droite: 37 51 57 65 95
@3 (60)
    à gauche: 52, à droite: 53
@4 (61)
    à gauche: 54, à droite: 55
direct_declarator (62)
    à gauche: 57 58 60 62, à droite: 53 55 60 62
@5 (63)
    à gauche: 56, à droite: 57
$@6 (64)
    à gauche: 59, à droite: 60
$@7 (65)
    à gauche: 61, à droite: 62
parameter_list (66)
    à gauche: 63 64, à droite: 60 64
parameter_declaration (67)
    à gauche: 65, à droite: 63 64
statement (68)
    à gauche: 66 67 68 69 70, à droite: 79 80 83 84 85 86
entree (69)
    à gauche: 71, à droite: 74 75 76
sortie (70)
    à gauche: 72, à droite: 74 75 76
compound_statement (71)
    à gauche: 73 74 75 76, à droite: 66 95
declaration_list (72)
    à gauche: 77 78, à droite: 75 76 78
statement_list (73)
    à gauche: 79 80, à droite: 74 76 80
expression_statement (74)
    à gauche: 81 82, à droite: 67 86
selection_statement (75)
    à gauche: 83 84, à droite: 68
iteration_statement (76)
    à gauche: 85 86, à droite: 69
jump_statement (77)
    à gauche: 87 88, à droite: 70
program_start (78)
    à gauche: 89, à droite: 0
program (79)
    à gauche: 90 91, à droite: 89 91
external_declaration (80)
    à gauche: 92 93, à droite: 90 91
function_definition (81)
    à gauche: 95, à droite: 92
$@8 (82)
    à gauche: 94, à droite: 95


État 0

    0 $accept: . program_start $end

    EXTERN  décalage et aller à l'état 1
    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    declaration             aller à l'état 5
    declaration_specifiers  aller à l'état 6
    type_specifier          aller à l'état 7
    struct_specifier        aller à l'état 8
    program_start           aller à l'état 9
    program                 aller à l'état 10
    external_declaration    aller à l'état 11
    function_definition     aller à l'état 12


État 1

   39 declaration_specifiers: EXTERN . type_specifier

    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    type_specifier    aller à l'état 13
    struct_specifier  aller à l'état 14


État 2

   42 type_specifier: INT .

    $défaut  réduction par utilisation de la règle 42 (type_specifier)


État 3

   41 type_specifier: VOID .

    $défaut  réduction par utilisation de la règle 41 (type_specifier)


État 4

   45 struct_specifier: STRUCT . IDENTIFIER '{' @1 struct_declaration_list '}'
   47                 | STRUCT . '{' $@2 struct_declaration_list '}'
   48                 | STRUCT . IDENTIFIER

    '{'         décalage et aller à l'état 15
    IDENTIFIER  décalage et aller à l'état 16


État 5

   93 external_declaration: declaration .

    $défaut  réduction par utilisation de la règle 93 (external_declaration)


État 6

   37 declaration: declaration_specifiers . declarator ';'
   95 function_definition: declaration_specifiers . declarator $@8 compound_statement

    '*'  décalage et aller à l'état 17

    $défaut  réduction par utilisation de la règle 54 (@4)

    declarator  aller à l'état 18
    @4          aller à l'état 19


État 7

   40 declaration_specifiers: type_specifier .

    $défaut  réduction par utilisation de la règle 40 (declaration_specifiers)


État 8

   38 declaration: struct_specifier . ';'
   43 type_specifier: struct_specifier .

    ';'  décalage et aller à l'état 20

    $défaut  réduction par utilisation de la règle 43 (type_specifier)


État 9

    0 $accept: program_start . $end

    $end  décalage et aller à l'état 21


État 10

   89 program_start: program .
   91 program: program . external_declaration

    EXTERN  décalage et aller à l'état 1
    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    $défaut  réduction par utilisation de la règle 89 (program_start)

    declaration             aller à l'état 5
    declaration_specifiers  aller à l'état 6
    type_specifier          aller à l'état 7
    struct_specifier        aller à l'état 8
    external_declaration    aller à l'état 22
    function_definition     aller à l'état 12


État 11

   90 program: external_declaration .

    $défaut  réduction par utilisation de la règle 90 (program)


État 12

   92 external_declaration: function_definition .

    $défaut  réduction par utilisation de la règle 92 (external_declaration)


État 13

   39 declaration_specifiers: EXTERN type_specifier .

    $défaut  réduction par utilisation de la règle 39 (declaration_specifiers)


État 14

   43 type_specifier: struct_specifier .

    $défaut  réduction par utilisation de la règle 43 (type_specifier)


État 15

   47 struct_specifier: STRUCT '{' . $@2 struct_declaration_list '}'

    $défaut  réduction par utilisation de la règle 46 ($@2)

    $@2  aller à l'état 23


État 16

   45 struct_specifier: STRUCT IDENTIFIER . '{' @1 struct_declaration_list '}'
   48                 | STRUCT IDENTIFIER .

    '{'  décalage et aller à l'état 24

    $défaut  réduction par utilisation de la règle 48 (struct_specifier)


État 17

   53 declarator: '*' . @3 direct_declarator

    $défaut  réduction par utilisation de la règle 52 (@3)

    @3  aller à l'état 25


État 18

   37 declaration: declaration_specifiers declarator . ';'
   95 function_definition: declaration_specifiers declarator . $@8 compound_statement

    ';'  décalage et aller à l'état 26

    $défaut  réduction par utilisation de la règle 94 ($@8)

    $@8  aller à l'état 27


État 19

   55 declarator: @4 . direct_declarator

    '('         décalage et aller à l'état 28
    IDENTIFIER  décalage et aller à l'état 29

    direct_declarator  aller à l'état 30


État 20

   38 declaration: struct_specifier ';' .

    $défaut  réduction par utilisation de la règle 38 (declaration)


État 21

    0 $accept: program_start $end .

    $défaut  accepter


État 22

   91 program: program external_declaration .

    $défaut  réduction par utilisation de la règle 91 (program)


État 23

   47 struct_specifier: STRUCT '{' $@2 . struct_declaration_list '}'

    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    type_specifier           aller à l'état 31
    struct_specifier         aller à l'état 14
    struct_declaration_list  aller à l'état 32
    struct_declaration       aller à l'état 33


État 24

   45 struct_specifier: STRUCT IDENTIFIER '{' . @1 struct_declaration_list '}'

    $défaut  réduction par utilisation de la règle 44 (@1)

    @1  aller à l'état 34


État 25

   53 declarator: '*' @3 . direct_declarator

    '('         décalage et aller à l'état 28
    IDENTIFIER  décalage et aller à l'état 29

    direct_declarator  aller à l'état 35


État 26

   37 declaration: declaration_specifiers declarator ';' .

    $défaut  réduction par utilisation de la règle 37 (declaration)


État 27

   95 function_definition: declaration_specifiers declarator $@8 . compound_statement

    '{'  décalage et aller à l'état 36

    entree              aller à l'état 37
    compound_statement  aller à l'état 38


État 28

   57 direct_declarator: '(' . @5 declarator ')'

    $défaut  réduction par utilisation de la règle 56 (@5)

    @5  aller à l'état 39


État 29

   58 direct_declarator: IDENTIFIER .

    $défaut  réduction par utilisation de la règle 58 (direct_declarator)


État 30

   55 declarator: @4 direct_declarator .
   60 direct_declarator: direct_declarator . '(' $@6 parameter_list ')'
   62                  | direct_declarator . '(' $@7 ')'

    '('  décalage et aller à l'état 40

    $défaut  réduction par utilisation de la règle 55 (declarator)


État 31

   51 struct_declaration: type_specifier . declarator ';'

    '*'  décalage et aller à l'état 17

    $défaut  réduction par utilisation de la règle 54 (@4)

    declarator  aller à l'état 41
    @4          aller à l'état 19


État 32

   47 struct_specifier: STRUCT '{' $@2 struct_declaration_list . '}'
   50 struct_declaration_list: struct_declaration_list . struct_declaration

    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4
    '}'     décalage et aller à l'état 42

    type_specifier      aller à l'état 31
    struct_specifier    aller à l'état 14
    struct_declaration  aller à l'état 43


État 33

   49 struct_declaration_list: struct_declaration .

    $défaut  réduction par utilisation de la règle 49 (struct_declaration_list)


État 34

   45 struct_specifier: STRUCT IDENTIFIER '{' @1 . struct_declaration_list '}'

    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    type_specifier           aller à l'état 31
    struct_specifier         aller à l'état 14
    struct_declaration_list  aller à l'état 44
    struct_declaration       aller à l'état 33


État 35

   53 declarator: '*' @3 direct_declarator .
   60 direct_declarator: direct_declarator . '(' $@6 parameter_list ')'
   62                  | direct_declarator . '(' $@7 ')'

    '('  décalage et aller à l'état 40

    $défaut  réduction par utilisation de la règle 53 (declarator)


État 36

   71 entree: '{' .
   73 compound_statement: '{' . '}'

    '}'  décalage et aller à l'état 45

    $défaut  réduction par utilisation de la règle 71 (entree)


État 37

   74 compound_statement: entree . statement_list sortie
   75                   | entree . declaration_list sortie
   76                   | entree . declaration_list statement_list sortie

    SIZEOF      décalage et aller à l'état 46
    EXTERN      décalage et aller à l'état 1
    INT         décalage et aller à l'état 2
    VOID        décalage et aller à l'état 3
    STRUCT      décalage et aller à l'état 4
    IF          décalage et aller à l'état 47
    WHILE       décalage et aller à l'état 48
    FOR         décalage et aller à l'état 49
    RETURN      décalage et aller à l'état 50
    '('         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 36
    ';'         décalage et aller à l'état 52
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 68
    declaration                aller à l'état 69
    declaration_specifiers     aller à l'état 70
    type_specifier             aller à l'état 7
    struct_specifier           aller à l'état 8
    statement                  aller à l'état 71
    entree                     aller à l'état 37
    compound_statement         aller à l'état 72
    declaration_list           aller à l'état 73
    statement_list             aller à l'état 74
    expression_statement       aller à l'état 75
    selection_statement        aller à l'état 76
    iteration_statement        aller à l'état 77
    jump_statement             aller à l'état 78


État 38

   95 function_definition: declaration_specifiers declarator $@8 compound_statement .

    $défaut  réduction par utilisation de la règle 95 (function_definition)


État 39

   57 direct_declarator: '(' @5 . declarator ')'

    '*'  décalage et aller à l'état 17

    $défaut  réduction par utilisation de la règle 54 (@4)

    declarator  aller à l'état 79
    @4          aller à l'état 19


État 40

   60 direct_declarator: direct_declarator '(' . $@6 parameter_list ')'
   62                  | direct_declarator '(' . $@7 ')'

    ')'       réduction par utilisation de la règle 61 ($@7)
    $défaut  réduction par utilisation de la règle 59 ($@6)

    $@6  aller à l'état 80
    $@7  aller à l'état 81


État 41

   51 struct_declaration: type_specifier declarator . ';'

    ';'  décalage et aller à l'état 82


État 42

   47 struct_specifier: STRUCT '{' $@2 struct_declaration_list '}' .

    $défaut  réduction par utilisation de la règle 47 (struct_specifier)


État 43

   50 struct_declaration_list: struct_declaration_list struct_declaration .

    $défaut  réduction par utilisation de la règle 50 (struct_declaration_list)


État 44

   45 struct_specifier: STRUCT IDENTIFIER '{' @1 struct_declaration_list . '}'
   50 struct_declaration_list: struct_declaration_list . struct_declaration

    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4
    '}'     décalage et aller à l'état 83

    type_specifier      aller à l'état 31
    struct_specifier    aller à l'état 14
    struct_declaration  aller à l'état 43


État 45

   73 compound_statement: '{' '}' .

    $défaut  réduction par utilisation de la règle 73 (compound_statement)


État 46

   12 unary_expression: SIZEOF . '(' type_specifier ')'
   13                 | SIZEOF . unary_expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 84
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression  aller à l'état 58
    postfix_expression  aller à l'état 59
    unary_expression    aller à l'état 85
    unary_operator      aller à l'état 61


État 47

   83 selection_statement: IF . '(' expression ')' statement
   84                    | IF . '(' expression ')' statement ELSE statement

    '('  décalage et aller à l'état 86


État 48

   85 iteration_statement: WHILE . '(' expression ')' statement

    '('  décalage et aller à l'état 87


État 49

   86 iteration_statement: FOR . '(' expression_statement expression_statement expression ')' statement

    '('  décalage et aller à l'état 88


État 50

   87 jump_statement: RETURN . ';'
   88               | RETURN . expression ';'

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    ';'         décalage et aller à l'état 89
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 90


État 51

    1 primary_expression: '(' . expression ')'

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 91


État 52

   81 expression_statement: ';' .

    $défaut  réduction par utilisation de la règle 81 (expression_statement)


État 53

   14 unary_operator: '&' .

    $défaut  réduction par utilisation de la règle 14 (unary_operator)


État 54

   15 unary_operator: '*' .

    $défaut  réduction par utilisation de la règle 15 (unary_operator)


État 55

   16 unary_operator: '-' .

    $défaut  réduction par utilisation de la règle 16 (unary_operator)


État 56

    3 primary_expression: IDENTIFIER .

    $défaut  réduction par utilisation de la règle 3 (primary_expression)


État 57

    2 primary_expression: CONSTANT .

    $défaut  réduction par utilisation de la règle 2 (primary_expression)


État 58

    4 postfix_expression: primary_expression .

    $défaut  réduction par utilisation de la règle 4 (postfix_expression)


État 59

    5 postfix_expression: postfix_expression . '(' ')'
    6                   | postfix_expression . '(' argument_expression_list ')'
    7                   | postfix_expression . PTR_OP IDENTIFIER
   10 unary_expression: postfix_expression .

    PTR_OP  décalage et aller à l'état 92
    '('     décalage et aller à l'état 93

    $défaut  réduction par utilisation de la règle 10 (unary_expression)


État 60

   17 multiplicative_expression: unary_expression .
   36 expression: unary_expression . '=' expression

    '='  décalage et aller à l'état 94

    $défaut  réduction par utilisation de la règle 17 (multiplicative_expression)


État 61

   11 unary_expression: unary_operator . unary_expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression  aller à l'état 58
    postfix_expression  aller à l'état 59
    unary_expression    aller à l'état 95
    unary_operator      aller à l'état 61


État 62

   18 multiplicative_expression: multiplicative_expression . '*' unary_expression
   19                          | multiplicative_expression . '/' unary_expression
   20 additive_expression: multiplicative_expression .

    '*'  décalage et aller à l'état 96
    '/'  décalage et aller à l'état 97

    $défaut  réduction par utilisation de la règle 20 (additive_expression)


État 63

   21 additive_expression: additive_expression . '+' multiplicative_expression
   22                    | additive_expression . '-' multiplicative_expression
   23 relational_expression: additive_expression .

    '-'  décalage et aller à l'état 98
    '+'  décalage et aller à l'état 99

    $défaut  réduction par utilisation de la règle 23 (relational_expression)


État 64

   24 relational_expression: relational_expression . '<' additive_expression
   25                      | relational_expression . '>' additive_expression
   26                      | relational_expression . LE_OP additive_expression
   27                      | relational_expression . GE_OP additive_expression
   28 equality_expression: relational_expression .

    LE_OP  décalage et aller à l'état 100
    GE_OP  décalage et aller à l'état 101
    '>'    décalage et aller à l'état 102
    '<'    décalage et aller à l'état 103

    $défaut  réduction par utilisation de la règle 28 (equality_expression)


État 65

   29 equality_expression: equality_expression . EQ_OP relational_expression
   30                    | equality_expression . NE_OP relational_expression
   31 logical_and_expression: equality_expression .

    EQ_OP  décalage et aller à l'état 104
    NE_OP  décalage et aller à l'état 105

    $défaut  réduction par utilisation de la règle 31 (logical_and_expression)


État 66

   32 logical_and_expression: logical_and_expression . AND_OP equality_expression
   33 logical_or_expression: logical_and_expression .

    AND_OP  décalage et aller à l'état 106

    $défaut  réduction par utilisation de la règle 33 (logical_or_expression)


État 67

   34 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   35 expression: logical_or_expression .

    OR_OP  décalage et aller à l'état 107

    $défaut  réduction par utilisation de la règle 35 (expression)


État 68

   82 expression_statement: expression . ';'

    ';'  décalage et aller à l'état 108


État 69

   77 declaration_list: declaration .

    $défaut  réduction par utilisation de la règle 77 (declaration_list)


État 70

   37 declaration: declaration_specifiers . declarator ';'

    '*'  décalage et aller à l'état 17

    $défaut  réduction par utilisation de la règle 54 (@4)

    declarator  aller à l'état 109
    @4          aller à l'état 19


État 71

   79 statement_list: statement .

    $défaut  réduction par utilisation de la règle 79 (statement_list)


État 72

   66 statement: compound_statement .

    $défaut  réduction par utilisation de la règle 66 (statement)


État 73

   75 compound_statement: entree declaration_list . sortie
   76                   | entree declaration_list . statement_list sortie
   78 declaration_list: declaration_list . declaration

    SIZEOF      décalage et aller à l'état 46
    EXTERN      décalage et aller à l'état 1
    INT         décalage et aller à l'état 2
    VOID        décalage et aller à l'état 3
    STRUCT      décalage et aller à l'état 4
    IF          décalage et aller à l'état 47
    WHILE       décalage et aller à l'état 48
    FOR         décalage et aller à l'état 49
    RETURN      décalage et aller à l'état 50
    '('         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 36
    '}'         décalage et aller à l'état 110
    ';'         décalage et aller à l'état 52
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 68
    declaration                aller à l'état 111
    declaration_specifiers     aller à l'état 70
    type_specifier             aller à l'état 7
    struct_specifier           aller à l'état 8
    statement                  aller à l'état 71
    entree                     aller à l'état 37
    sortie                     aller à l'état 112
    compound_statement         aller à l'état 72
    statement_list             aller à l'état 113
    expression_statement       aller à l'état 75
    selection_statement        aller à l'état 76
    iteration_statement        aller à l'état 77
    jump_statement             aller à l'état 78


État 74

   74 compound_statement: entree statement_list . sortie
   80 statement_list: statement_list . statement

    SIZEOF      décalage et aller à l'état 46
    IF          décalage et aller à l'état 47
    WHILE       décalage et aller à l'état 48
    FOR         décalage et aller à l'état 49
    RETURN      décalage et aller à l'état 50
    '('         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 36
    '}'         décalage et aller à l'état 110
    ';'         décalage et aller à l'état 52
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 68
    statement                  aller à l'état 114
    entree                     aller à l'état 37
    sortie                     aller à l'état 115
    compound_statement         aller à l'état 72
    expression_statement       aller à l'état 75
    selection_statement        aller à l'état 76
    iteration_statement        aller à l'état 77
    jump_statement             aller à l'état 78


État 75

   67 statement: expression_statement .

    $défaut  réduction par utilisation de la règle 67 (statement)


État 76

   68 statement: selection_statement .

    $défaut  réduction par utilisation de la règle 68 (statement)


État 77

   69 statement: iteration_statement .

    $défaut  réduction par utilisation de la règle 69 (statement)


État 78

   70 statement: jump_statement .

    $défaut  réduction par utilisation de la règle 70 (statement)


État 79

   57 direct_declarator: '(' @5 declarator . ')'

    ')'  décalage et aller à l'état 116


État 80

   60 direct_declarator: direct_declarator '(' $@6 . parameter_list ')'

    EXTERN  décalage et aller à l'état 1
    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    declaration_specifiers  aller à l'état 117
    type_specifier          aller à l'état 7
    struct_specifier        aller à l'état 14
    parameter_list          aller à l'état 118
    parameter_declaration   aller à l'état 119


État 81

   62 direct_declarator: direct_declarator '(' $@7 . ')'

    ')'  décalage et aller à l'état 120


État 82

   51 struct_declaration: type_specifier declarator ';' .

    $défaut  réduction par utilisation de la règle 51 (struct_declaration)


État 83

   45 struct_specifier: STRUCT IDENTIFIER '{' @1 struct_declaration_list '}' .

    $défaut  réduction par utilisation de la règle 45 (struct_specifier)


État 84

    1 primary_expression: '(' . expression ')'
   12 unary_expression: SIZEOF '(' . type_specifier ')'

    SIZEOF      décalage et aller à l'état 46
    INT         décalage et aller à l'état 2
    VOID        décalage et aller à l'état 3
    STRUCT      décalage et aller à l'état 4
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 91
    type_specifier             aller à l'état 121
    struct_specifier           aller à l'état 14


État 85

   13 unary_expression: SIZEOF unary_expression .

    $défaut  réduction par utilisation de la règle 13 (unary_expression)


État 86

   83 selection_statement: IF '(' . expression ')' statement
   84                    | IF '(' . expression ')' statement ELSE statement

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 122


État 87

   85 iteration_statement: WHILE '(' . expression ')' statement

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 123


État 88

   86 iteration_statement: FOR '(' . expression_statement expression_statement expression ')' statement

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    ';'         décalage et aller à l'état 52
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 68
    expression_statement       aller à l'état 124


État 89

   87 jump_statement: RETURN ';' .

    $défaut  réduction par utilisation de la règle 87 (jump_statement)


État 90

   88 jump_statement: RETURN expression . ';'

    ';'  décalage et aller à l'état 125


État 91

    1 primary_expression: '(' expression . ')'

    ')'  décalage et aller à l'état 126


État 92

    7 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  décalage et aller à l'état 127


État 93

    5 postfix_expression: postfix_expression '(' . ')'
    6                   | postfix_expression '(' . argument_expression_list ')'

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    ')'         décalage et aller à l'état 128
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    argument_expression_list   aller à l'état 129
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 130


État 94

   36 expression: unary_expression '=' . expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 131


État 95

   11 unary_expression: unary_operator unary_expression .

    $défaut  réduction par utilisation de la règle 11 (unary_expression)


État 96

   18 multiplicative_expression: multiplicative_expression '*' . unary_expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression  aller à l'état 58
    postfix_expression  aller à l'état 59
    unary_expression    aller à l'état 132
    unary_operator      aller à l'état 61


État 97

   19 multiplicative_expression: multiplicative_expression '/' . unary_expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression  aller à l'état 58
    postfix_expression  aller à l'état 59
    unary_expression    aller à l'état 133
    unary_operator      aller à l'état 61


État 98

   22 additive_expression: additive_expression '-' . multiplicative_expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 134
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 135


État 99

   21 additive_expression: additive_expression '+' . multiplicative_expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 134
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 136


État 100

   26 relational_expression: relational_expression LE_OP . additive_expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 134
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 137


État 101

   27 relational_expression: relational_expression GE_OP . additive_expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 134
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 138


État 102

   25 relational_expression: relational_expression '>' . additive_expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 134
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 139


État 103

   24 relational_expression: relational_expression '<' . additive_expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 134
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 140


État 104

   29 equality_expression: equality_expression EQ_OP . relational_expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 134
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 141


État 105

   30 equality_expression: equality_expression NE_OP . relational_expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 134
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 142


État 106

   32 logical_and_expression: logical_and_expression AND_OP . equality_expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 134
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 143


État 107

   34 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 134
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 144


État 108

   82 expression_statement: expression ';' .

    $défaut  réduction par utilisation de la règle 82 (expression_statement)


État 109

   37 declaration: declaration_specifiers declarator . ';'

    ';'  décalage et aller à l'état 26


État 110

   72 sortie: '}' .

    $défaut  réduction par utilisation de la règle 72 (sortie)


État 111

   78 declaration_list: declaration_list declaration .

    $défaut  réduction par utilisation de la règle 78 (declaration_list)


État 112

   75 compound_statement: entree declaration_list sortie .

    $défaut  réduction par utilisation de la règle 75 (compound_statement)


État 113

   76 compound_statement: entree declaration_list statement_list . sortie
   80 statement_list: statement_list . statement

    SIZEOF      décalage et aller à l'état 46
    IF          décalage et aller à l'état 47
    WHILE       décalage et aller à l'état 48
    FOR         décalage et aller à l'état 49
    RETURN      décalage et aller à l'état 50
    '('         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 36
    '}'         décalage et aller à l'état 110
    ';'         décalage et aller à l'état 52
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 68
    statement                  aller à l'état 114
    entree                     aller à l'état 37
    sortie                     aller à l'état 145
    compound_statement         aller à l'état 72
    expression_statement       aller à l'état 75
    selection_statement        aller à l'état 76
    iteration_statement        aller à l'état 77
    jump_statement             aller à l'état 78


État 114

   80 statement_list: statement_list statement .

    $défaut  réduction par utilisation de la règle 80 (statement_list)


État 115

   74 compound_statement: entree statement_list sortie .

    $défaut  réduction par utilisation de la règle 74 (compound_statement)


État 116

   57 direct_declarator: '(' @5 declarator ')' .

    $défaut  réduction par utilisation de la règle 57 (direct_declarator)


État 117

   65 parameter_declaration: declaration_specifiers . declarator

    '*'  décalage et aller à l'état 17

    $défaut  réduction par utilisation de la règle 54 (@4)

    declarator  aller à l'état 146
    @4          aller à l'état 19


État 118

   60 direct_declarator: direct_declarator '(' $@6 parameter_list . ')'
   64 parameter_list: parameter_list . ',' parameter_declaration

    ')'  décalage et aller à l'état 147
    ','  décalage et aller à l'état 148


État 119

   63 parameter_list: parameter_declaration .

    $défaut  réduction par utilisation de la règle 63 (parameter_list)


État 120

   62 direct_declarator: direct_declarator '(' $@7 ')' .

    $défaut  réduction par utilisation de la règle 62 (direct_declarator)


État 121

   12 unary_expression: SIZEOF '(' type_specifier . ')'

    ')'  décalage et aller à l'état 149


État 122

   83 selection_statement: IF '(' expression . ')' statement
   84                    | IF '(' expression . ')' statement ELSE statement

    ')'  décalage et aller à l'état 150


État 123

   85 iteration_statement: WHILE '(' expression . ')' statement

    ')'  décalage et aller à l'état 151


État 124

   86 iteration_statement: FOR '(' expression_statement . expression_statement expression ')' statement

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    ';'         décalage et aller à l'état 52
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 68
    expression_statement       aller à l'état 152


État 125

   88 jump_statement: RETURN expression ';' .

    $défaut  réduction par utilisation de la règle 88 (jump_statement)


État 126

    1 primary_expression: '(' expression ')' .

    $défaut  réduction par utilisation de la règle 1 (primary_expression)


État 127

    7 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $défaut  réduction par utilisation de la règle 7 (postfix_expression)


État 128

    5 postfix_expression: postfix_expression '(' ')' .

    $défaut  réduction par utilisation de la règle 5 (postfix_expression)


État 129

    6 postfix_expression: postfix_expression '(' argument_expression_list . ')'
    9 argument_expression_list: argument_expression_list . ',' expression

    ')'  décalage et aller à l'état 153
    ','  décalage et aller à l'état 154


État 130

    8 argument_expression_list: expression .

    $défaut  réduction par utilisation de la règle 8 (argument_expression_list)


État 131

   36 expression: unary_expression '=' expression .

    $défaut  réduction par utilisation de la règle 36 (expression)


État 132

   18 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $défaut  réduction par utilisation de la règle 18 (multiplicative_expression)


État 133

   19 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $défaut  réduction par utilisation de la règle 19 (multiplicative_expression)


État 134

   17 multiplicative_expression: unary_expression .

    $défaut  réduction par utilisation de la règle 17 (multiplicative_expression)


État 135

   18 multiplicative_expression: multiplicative_expression . '*' unary_expression
   19                          | multiplicative_expression . '/' unary_expression
   22 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  décalage et aller à l'état 96
    '/'  décalage et aller à l'état 97

    $défaut  réduction par utilisation de la règle 22 (additive_expression)


État 136

   18 multiplicative_expression: multiplicative_expression . '*' unary_expression
   19                          | multiplicative_expression . '/' unary_expression
   21 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  décalage et aller à l'état 96
    '/'  décalage et aller à l'état 97

    $défaut  réduction par utilisation de la règle 21 (additive_expression)


État 137

   21 additive_expression: additive_expression . '+' multiplicative_expression
   22                    | additive_expression . '-' multiplicative_expression
   26 relational_expression: relational_expression LE_OP additive_expression .

    '-'  décalage et aller à l'état 98
    '+'  décalage et aller à l'état 99

    $défaut  réduction par utilisation de la règle 26 (relational_expression)


État 138

   21 additive_expression: additive_expression . '+' multiplicative_expression
   22                    | additive_expression . '-' multiplicative_expression
   27 relational_expression: relational_expression GE_OP additive_expression .

    '-'  décalage et aller à l'état 98
    '+'  décalage et aller à l'état 99

    $défaut  réduction par utilisation de la règle 27 (relational_expression)


État 139

   21 additive_expression: additive_expression . '+' multiplicative_expression
   22                    | additive_expression . '-' multiplicative_expression
   25 relational_expression: relational_expression '>' additive_expression .

    '-'  décalage et aller à l'état 98
    '+'  décalage et aller à l'état 99

    $défaut  réduction par utilisation de la règle 25 (relational_expression)


État 140

   21 additive_expression: additive_expression . '+' multiplicative_expression
   22                    | additive_expression . '-' multiplicative_expression
   24 relational_expression: relational_expression '<' additive_expression .

    '-'  décalage et aller à l'état 98
    '+'  décalage et aller à l'état 99

    $défaut  réduction par utilisation de la règle 24 (relational_expression)


État 141

   24 relational_expression: relational_expression . '<' additive_expression
   25                      | relational_expression . '>' additive_expression
   26                      | relational_expression . LE_OP additive_expression
   27                      | relational_expression . GE_OP additive_expression
   29 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  décalage et aller à l'état 100
    GE_OP  décalage et aller à l'état 101
    '>'    décalage et aller à l'état 102
    '<'    décalage et aller à l'état 103

    $défaut  réduction par utilisation de la règle 29 (equality_expression)


État 142

   24 relational_expression: relational_expression . '<' additive_expression
   25                      | relational_expression . '>' additive_expression
   26                      | relational_expression . LE_OP additive_expression
   27                      | relational_expression . GE_OP additive_expression
   30 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  décalage et aller à l'état 100
    GE_OP  décalage et aller à l'état 101
    '>'    décalage et aller à l'état 102
    '<'    décalage et aller à l'état 103

    $défaut  réduction par utilisation de la règle 30 (equality_expression)


État 143

   29 equality_expression: equality_expression . EQ_OP relational_expression
   30                    | equality_expression . NE_OP relational_expression
   32 logical_and_expression: logical_and_expression AND_OP equality_expression .

    EQ_OP  décalage et aller à l'état 104
    NE_OP  décalage et aller à l'état 105

    $défaut  réduction par utilisation de la règle 32 (logical_and_expression)


État 144

   32 logical_and_expression: logical_and_expression . AND_OP equality_expression
   34 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  décalage et aller à l'état 106

    $défaut  réduction par utilisation de la règle 34 (logical_or_expression)


État 145

   76 compound_statement: entree declaration_list statement_list sortie .

    $défaut  réduction par utilisation de la règle 76 (compound_statement)


État 146

   65 parameter_declaration: declaration_specifiers declarator .

    $défaut  réduction par utilisation de la règle 65 (parameter_declaration)


État 147

   60 direct_declarator: direct_declarator '(' $@6 parameter_list ')' .

    $défaut  réduction par utilisation de la règle 60 (direct_declarator)


État 148

   64 parameter_list: parameter_list ',' . parameter_declaration

    EXTERN  décalage et aller à l'état 1
    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    declaration_specifiers  aller à l'état 117
    type_specifier          aller à l'état 7
    struct_specifier        aller à l'état 14
    parameter_declaration   aller à l'état 155


État 149

   12 unary_expression: SIZEOF '(' type_specifier ')' .

    $défaut  réduction par utilisation de la règle 12 (unary_expression)


État 150

   83 selection_statement: IF '(' expression ')' . statement
   84                    | IF '(' expression ')' . statement ELSE statement

    SIZEOF      décalage et aller à l'état 46
    IF          décalage et aller à l'état 47
    WHILE       décalage et aller à l'état 48
    FOR         décalage et aller à l'état 49
    RETURN      décalage et aller à l'état 50
    '('         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 36
    ';'         décalage et aller à l'état 52
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 68
    statement                  aller à l'état 156
    entree                     aller à l'état 37
    compound_statement         aller à l'état 72
    expression_statement       aller à l'état 75
    selection_statement        aller à l'état 76
    iteration_statement        aller à l'état 77
    jump_statement             aller à l'état 78


État 151

   85 iteration_statement: WHILE '(' expression ')' . statement

    SIZEOF      décalage et aller à l'état 46
    IF          décalage et aller à l'état 47
    WHILE       décalage et aller à l'état 48
    FOR         décalage et aller à l'état 49
    RETURN      décalage et aller à l'état 50
    '('         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 36
    ';'         décalage et aller à l'état 52
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 68
    statement                  aller à l'état 157
    entree                     aller à l'état 37
    compound_statement         aller à l'état 72
    expression_statement       aller à l'état 75
    selection_statement        aller à l'état 76
    iteration_statement        aller à l'état 77
    jump_statement             aller à l'état 78


État 152

   86 iteration_statement: FOR '(' expression_statement expression_statement . expression ')' statement

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 158


État 153

    6 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $défaut  réduction par utilisation de la règle 6 (postfix_expression)


État 154

    9 argument_expression_list: argument_expression_list ',' . expression

    SIZEOF      décalage et aller à l'état 46
    '('         décalage et aller à l'état 51
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 159


État 155

   64 parameter_list: parameter_list ',' parameter_declaration .

    $défaut  réduction par utilisation de la règle 64 (parameter_list)


État 156

   83 selection_statement: IF '(' expression ')' statement .
   84                    | IF '(' expression ')' statement . ELSE statement

    ELSE  décalage et aller à l'état 160

    $défaut  réduction par utilisation de la règle 83 (selection_statement)


État 157

   85 iteration_statement: WHILE '(' expression ')' statement .

    $défaut  réduction par utilisation de la règle 85 (iteration_statement)


État 158

   86 iteration_statement: FOR '(' expression_statement expression_statement expression . ')' statement

    ')'  décalage et aller à l'état 161


État 159

    9 argument_expression_list: argument_expression_list ',' expression .

    $défaut  réduction par utilisation de la règle 9 (argument_expression_list)


État 160

   84 selection_statement: IF '(' expression ')' statement ELSE . statement

    SIZEOF      décalage et aller à l'état 46
    IF          décalage et aller à l'état 47
    WHILE       décalage et aller à l'état 48
    FOR         décalage et aller à l'état 49
    RETURN      décalage et aller à l'état 50
    '('         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 36
    ';'         décalage et aller à l'état 52
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 68
    statement                  aller à l'état 162
    entree                     aller à l'état 37
    compound_statement         aller à l'état 72
    expression_statement       aller à l'état 75
    selection_statement        aller à l'état 76
    iteration_statement        aller à l'état 77
    jump_statement             aller à l'état 78


État 161

   86 iteration_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    SIZEOF      décalage et aller à l'état 46
    IF          décalage et aller à l'état 47
    WHILE       décalage et aller à l'état 48
    FOR         décalage et aller à l'état 49
    RETURN      décalage et aller à l'état 50
    '('         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 36
    ';'         décalage et aller à l'état 52
    '&'         décalage et aller à l'état 53
    '*'         décalage et aller à l'état 54
    '-'         décalage et aller à l'état 55
    IDENTIFIER  décalage et aller à l'état 56
    CONSTANT    décalage et aller à l'état 57

    primary_expression         aller à l'état 58
    postfix_expression         aller à l'état 59
    unary_expression           aller à l'état 60
    unary_operator             aller à l'état 61
    multiplicative_expression  aller à l'état 62
    additive_expression        aller à l'état 63
    relational_expression      aller à l'état 64
    equality_expression        aller à l'état 65
    logical_and_expression     aller à l'état 66
    logical_or_expression      aller à l'état 67
    expression                 aller à l'état 68
    statement                  aller à l'état 163
    entree                     aller à l'état 37
    compound_statement         aller à l'état 72
    expression_statement       aller à l'état 75
    selection_statement        aller à l'état 76
    iteration_statement        aller à l'état 77
    jump_statement             aller à l'état 78


État 162

   84 selection_statement: IF '(' expression ')' statement ELSE statement .

    $défaut  réduction par utilisation de la règle 84 (selection_statement)


État 163

   86 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $défaut  réduction par utilisation de la règle 86 (iteration_statement)
