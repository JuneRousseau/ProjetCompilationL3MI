Instruction pour le compil: ./compil.sh nameLex.l nameYacc


TODO:
-factoriser les fonctions quand c'est possible
-verifier que les parametres sont de type int OU pointeur UNIQUEMENT!
-verifier que les return ne renvoient QUE des int, pointeurs ou constantes UNIQUEMENT!
-verifier qu'on ne declare pas une structures toute seule (sans pointeur)
-les pointeurs de pointeurs ne sont PAS autorisés!
-verifier que les structures sont allouées par un malloc
-il faut garder une compatibilité entre les pointeurs et les int (laquelle?)
-generation du code pour un pointeur sur fonction (qui doit devenir pointeur sur void)
-si les types sont trop long, ne pas les afficher dans les erreurs (necessaire ??)

ERREURS GRAVES : 
-si on a un expression du type "id->champs = expr", on a pas forcement la traduction avec le dereferencement

A DEMANDER :
-rendre le projet-> makefile ? script bash? 



NOUS SOMMES PERPLEXE:
typage des fonctions (en considerant que si on a un pointeur dans '(' declarator ')' , c'est que c'est un ptr sur fct )
le free pour la concatenation ?









